/**************************************
* コーディング規約
**************************************/

/* 以下必須 ---------------------------------------------

■■サポートブラウザ■■
・PC…Windows/Mac　Chrome,Firefox,Edge,IE,Safari 各ブラウザ最新版
・スマホ…Android 5.0以上 / iOS 9以上
※横幅は1920pxまでサポート


■■ディレクトリ構造■■
・htdocs直下をルートとする
・common > css 内に全スタイルシートの格納
・common > js 内に全javascriptファイルの格納
・common > img 内に全imgファイル格納
※imgディレクトリ直下は共通で使用するファイル（ロゴやアイコン等）を置き、
ページごとのファイルは各ディレクトリを作成し格納
・themeフォルダはWP用なので、静的コーディングのみの場合は無視してOK


■■画像について■■
jpgとpngを適宜使い分ける。jpgは画質80で切り出す


■■CSS記述ルール■■
・font-size は rem を使用。 例：16px → 1.6rem
※以下は慣れてないと時間がかかると思うので、なるべくでOK
・子孫セレクタはできればあまり使わないようにし、子セレクタを使うようにする。
・入れ子は２つまでを心掛ける。（３階層まで）
・レスポンシブの記述は、各記述のすぐ下に書く。
・可能な限り全要素にclassをつけ、要素自体にスタイルをつけない。
（※td,li,dt等、親が決まっているものについてはその限りではない）
・できるだけidにもスタイルをつけない。
・_state,_vend以外は"!important"を使用しない。（どうしてもという場合は仕方ない）


■■Sassを使用しない場合■■
cssは、特に理由がない限りなるべく "htdocs > common > css > style.css"内に全て記述すること。
ライブラリやフレームワーク等、別途用意されているものは普通に別途読み込む。


■■Sassを使用する場合■■
以下は必ず使用する。勝手に削除しないこと。
・lib
→_font.scss …ウェブフォント等、特殊なフォント使用時に記述
→_mixin.scss …mixinを記述
→_setting.scss …各種設定

・normalize
_normalize.scss or _reset.scss、どちらかの読み込みを選択する。
（デフォルトはreset。使いやすいほうでOK）

・_base.scss
デフォルトスタイル及びセレクタそのものへのスタイル指定

・_layout.scss
主にここにcssを書く。どこに書いたらいいかわからなくなったらここでOK。


※以下にその他のscssについても書かれているが、
　以下を使用しない場合は上記までのscssに記述すること。
　メインは全て"_layout.scss"に記述して良い。


/* 以下任意 ---------------------------------------------

■■CSS設計について■■
・_module.scss
再利用可能なパーツ。ページを構成する個々のコンポーネント（部品）で、
BEMの対象としない。（連結しない）
モジュールはさまざまな要素で利用される可能性があるので特定の要素に依存しないようにする。
特定の要素のためにモジュールを作りたければ、子セレクタや子孫セレクタでの対応にする。

・_state.scss
ステートルールは、レイアウトやモジュールのクラスと合わせて使う。
ステートの命名ルールは is- から始まるものとして、特定のレイアウトに依存しているものはレイアウト名を含めるようにする。
BEMの対象外。
例：.is-active .is-search-active

・_theme.scss
カラーや背景等、見た目に関わる部分を定義する。
BEMの対象とせず、主に単独class
例：.red .bdBlue .bgGray

・page …各ページごとに何か上書きしたいとき（見出し画像等）
例：_about.scss
ページごとにbody等にidをつけて使用しても可。

・_vend.scss
外部ライブラリ（bootstrap等）の上書きをしたい場合。


■■命名規則（BEM基盤）■■
class名は、
.block__element_modifier
のように記述。
キャメルケース使用可
例：.blockHere__elementInner_modifierHow

再利用可能なパーツについては、BEMではなく単独でclass名をつける。
