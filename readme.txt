■■サポートブラウザ■■
・PC…Windows/Mac　Chrome,Firefox,Edge,IE,Safari 各ブラウザ最新版
・スマホ…Android 5.0以上 / iOS 9以上
※横幅は1920pxまでサポート


■■ディレクトリ構造■■
・htdocs直下をルートとする
・common > css 内に全スタイルシートの格納
・common > js 内に全javascriptファイルの格納
・common > img 内に全imgファイル格納
※imgディレクトリ直下は共通で使用するファイル（ロゴやアイコン等）を置き、
ページごとのファイルは各ディレクトリを作成し格納
・themeフォルダはWP用なので、静的コーディングのみの場合は無視してOK


■■画像について■■
jpgとpngを適宜使い分ける。jpgは画質80で切り出す


■■gulpについて■■
事前：
node.jsをインストールしておく。
バージョンは任意で調整すること（当環境はv6.11.3）

gulp実行：
1.まず作業ディレクトリ(例：hoge)に移動し、インストール。
cd hoge
npm install

2.gulpfile.coffee内の"browser proxy"のURLを変更

3.npm run gulp
※グローバルにもgulpをインストールしている場合は、"gulp"のみでOK


■■SASSについて■■ ※SMACSSベース
・lib
→_font.scss …ウェブフォント等、特殊なフォント使用時に記述
→_mixin.scss …mixinを記述
→_setting.scss …各種設定

・normalize
normalize.cssとreset.css、どちらかの読み込みを選択する。
（デフォルトはreset。使いやすいほうでOK）

・_base.scss
デフォルトスタイル及びセレクタそのものへのスタイル指定

・_layout.scss
ページのエリア分けを行う。骨組み。class名の前に"l-"をつける。
（メジャーコンポーネント）
例：.l-header, .l-footer
繰り返し項目や、検索フォーム等ページ内で使いまわせるものにも使う。
（マイナーコンポーネント）
例：.l-container-12, .l-grid-06

・_module.scss
再利用可能なパーツ。ページを構成する個々のコンポーネント（部品）
モジュールはさまざまな要素で利用される可能性があるので特定の要素に依存しないようにする。
特定の要素のためにモジュールを作りたければ、子セレクタや子孫セレクタでの対応にする。
命名規則は特にないので、わかりやすいclass名をつければOK

・_state.scss
ステートルールは、レイアウトやモジュールのクラスと合わせて使う。
ステートの命名ルールは is- から始まるものとして、特定のレイアウトに依存しているものはレイアウト名を含めるようにする。
例：is-active,is-search-active

・_theme.scss
カラーや背景等、見た目に関わる部分を定義する。

・page …各ページごとに何か上書きしたいとき（見出し画像等）
→ _(page).scss (page)は各ページのパーマリンク

・_vend.scss
外部ライブラリ（bootstrap等）の上書きをしたい場合。


■■SASS記述ルール■■
・子孫セレクタはできればあまり使わないようにし、子セレクタを使うようにする。
・入れ子は２つまでを心掛ける。（３階層まで）
・レスポンシブの記述は、各記述のすぐ下に書く。
・可能な限り全要素にclassをつけ、要素自体にスタイルをつけない。
（※td,li,dt等、親が決まっているものについてはその限りではない）
・できるだけidにもスタイルをつけない。
・ステート以外は"!important"を使用しない。（どうしてもという場合は仕方ない）